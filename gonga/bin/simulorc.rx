( simulorc.rx )

( ---- Anatomy ---- )

variable (liver) 126 allot 

%11110000000000000000000000000000 constant num-mask

( ---- Orc State Machine ---- )
( ----     Aka the drp   ---- )

0  variable: kruncht
-1 variable: num-crunch
-1 variable: tawkin
0  variable: confusion

: nope-nope-nope
	"\nnope " puts  ;

(liver) 127 
  [ 	
    over +
    &nope-nope-nope
    swap !
  ] iter drop

: (st) (liver) + ! ;

' dup   'D (st)
' swap  's (st)
' over  'o (st)
' drop  '. (st)
' rot   'r (st)
' pop   '{ (st)
' push  '} (st)

' +     '+ (st)
' -     '- (st)
' *     '* (st)
' /     '/ (st)
' =     '= (st)
' <     '< (st)
' >     '> (st)
' mod   '~ (st)
' not   '^ (st)
' and   'A (st)
' or    'O (st)
' xor   'N (st)

' do    'X (st)
' '     '' (st)
' h     'h (st)



( ---- Tawka ---- )

: hexabyte ( "hexes a byte" )
	dup 10 < 
		[ 48 + ] 
		[ 87 + ] if ;

: byte>cha ( byte -> < := cha true | byte false > -- := ?cha )
	( "filters out non-printable ascii" )
	dup 32 126 within ;

: (heer) ( nil -> cha ) getc byte>cha ;

: heer [ (heer) not ] while ; 

: num-i "\nnumbaz!" puts ;

: num-c "\nno compila" puts ; 

: numbaz 
	@tawkin
	[ num-i ]
	[ num-c ] if ;

: lettaz "\nlettaz!" puts ;

: grk 
	@num-crunch	
	[ numbaz ]
	[ lettaz ] if
	0 ;

: grok  [ heer grk ] while ; 



